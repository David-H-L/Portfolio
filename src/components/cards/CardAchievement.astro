---
interface Project {
  name: string;
  linkGithub: string;
  linkDeploy: string;
  img: string;
  deploy: boolean;
  date: string;
  type: string;
}
const { name, linkGithub, linkDeploy, img, deploy, date, type } =
  Astro.props as Project;
import { currentHoliday } from "../../data/CurrentHoliday";
---

<article
  class="card-achievement group h-40 mt-1 mb-1 hover:border-b-1 duration-150 border-white bg-sky-500/10 relative overflow-hidden rounded-t-xl"
>
  {deploy && <a href={linkDeploy} class="absolute inset-0 z-10" />}

  <header
    class="absolute right-0 bg-black/50 p-0.5 rounded-bl-[10px] text-white z-10 text-[13px]"
  >
    {date}
  </header>

  {
    currentHoliday() === "octubre" && (
      <div class="absolute -top-1 left-1 h-10 w-10 z-10">
        <img src="/img/tumba.webp" alt="tumba" draggable="false" />
      </div>
    )
  }

  {
    currentHoliday() === "diciembre" && (
      <div class="absolute left-1 h-8 w-8 z-10">
        <img src="/img/gift.webp" alt="gift" draggable="false" />
      </div>
    )
  }

  {
    !deploy && (
      <div class="deploy-container absolute opacity-0 bg-black/90 px-2 rounded-2xl top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2 text-white z-10">
        <p class="text-center text-[12px]">Deploy</p>
        <p class="text-[12px]">not available</p>
      </div>
    )
  }

  <section
    class="absolute bottom-0 flex justify-between w-full px-2 bg-black/60 z-10"
  >
    <h3 class="text-white text-[13px] max-w-[40vw]">
      {name}
    </h3>

    {
      type === "project" && (
        <a href={linkGithub} class="text-white flex items-center">
          <i class="fa-solid fa-code" />
        </a>
      )
    }
  </section>

  <main class="group-hover:scale-110 transition-transform duration-400">
    <img
      src={img}
      alt="image project"
      class="h-40 w-full object-cover"
      draggable="false"
    />
  </main>
</article>

<script>
  const cards = document.querySelectorAll(".card-achievement");

  cards.forEach((card) => {
    const deploy = card.querySelector(".deploy-container");

    card.addEventListener("mouseenter", () => {
      deploy.style.opacity = "100";
    });

    card.addEventListener("mouseleave", () => {
      deploy.style.opacity = "0";
    });
  });
</script>
